/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.dashcore.blssignatures;

public class blssignaturesJNI {
  public final static native int BLS_CURVE_ID_SIZE_get();
  public final static native int BLS_CURVE_SECKEY_SIZE_get();
  public final static native int BLS_CURVE_PUBKEY_SIZE_get();
  public final static native int BLS_CURVE_SIG_SIZE_get();
  public final static native void CBLSId_SetInt(long jarg1, CBLSId jarg1_, int jarg2);
  public final static native void CBLSId_SetHash(long jarg1, CBLSId jarg1_, long jarg2);
  public final static native long CBLSId_FromInt(long jarg1);
  public final static native long CBLSId_FromHash(long jarg1);
  public final static native long new_CBLSId();
  public final static native void delete_CBLSId(long jarg1);
  public final static native void CBLSSecretKey_AggregateInsecure__SWIG_0(long jarg1, CBLSSecretKey jarg1_, long jarg2, CBLSSecretKey jarg2_);
  public final static native long CBLSSecretKey_AggregateInsecure__SWIG_1(long jarg1);
  public final static native void CBLSSecretKey_MakeNewKey(long jarg1, CBLSSecretKey jarg1_);
  public final static native boolean CBLSSecretKey_SecretKeyShare(long jarg1, CBLSSecretKey jarg1_, long jarg2, long jarg3, CBLSId jarg3_);
  public final static native long CBLSSecretKey_GetPublicKey(long jarg1, CBLSSecretKey jarg1_);
  public final static native long CBLSSecretKey_Sign(long jarg1, CBLSSecretKey jarg1_, long jarg2);
  public final static native long new_CBLSSecretKey();
  public final static native void delete_CBLSSecretKey(long jarg1);
  public final static native void CBLSPublicKey_AggregateInsecure__SWIG_0(long jarg1, CBLSPublicKey jarg1_, long jarg2, CBLSPublicKey jarg2_);
  public final static native long CBLSPublicKey_AggregateInsecure__SWIG_1(long jarg1);
  public final static native boolean CBLSPublicKey_PublicKeyShare(long jarg1, CBLSPublicKey jarg1_, long jarg2, long jarg3, CBLSId jarg3_);
  public final static native boolean CBLSPublicKey_DHKeyExchange(long jarg1, CBLSPublicKey jarg1_, long jarg2, CBLSSecretKey jarg2_, long jarg3, CBLSPublicKey jarg3_);
  public final static native long new_CBLSPublicKey();
  public final static native void delete_CBLSPublicKey(long jarg1);
  public final static native long new_CBLSSignature__SWIG_0();
  public final static native long new_CBLSSignature__SWIG_1(long jarg1, CBLSSignature jarg1_);
  public final static native void CBLSSignature_AggregateInsecure__SWIG_0(long jarg1, CBLSSignature jarg1_, long jarg2, CBLSSignature jarg2_);
  public final static native long CBLSSignature_AggregateInsecure__SWIG_1(long jarg1);
  public final static native long CBLSSignature_AggregateSecure(long jarg1, long jarg2, long jarg3);
  public final static native void CBLSSignature_SubInsecure(long jarg1, CBLSSignature jarg1_, long jarg2, CBLSSignature jarg2_);
  public final static native boolean CBLSSignature_VerifyInsecure(long jarg1, CBLSSignature jarg1_, long jarg2, CBLSPublicKey jarg2_, long jarg3);
  public final static native boolean CBLSSignature_VerifyInsecureAggregated(long jarg1, CBLSSignature jarg1_, long jarg2, long jarg3);
  public final static native boolean CBLSSignature_VerifySecureAggregated(long jarg1, CBLSSignature jarg1_, long jarg2, long jarg3);
  public final static native boolean CBLSSignature_Recover(long jarg1, CBLSSignature jarg1_, long jarg2, long jarg3);
  public final static native void delete_CBLSSignature(long jarg1);
  public final static native boolean BLSInit();
  public final static native long CBLSPrivateKey_SerSize_get();
  public final static native boolean CBLSPrivateKey_IsValid(long jarg1, CBLSPrivateKey jarg1_);
  public final static native void CBLSPrivateKey_SetBuf(long jarg1, CBLSPrivateKey jarg1_, long jarg2, long jarg3);
  public final static native void CBLSPrivateKey_Reset(long jarg1, CBLSPrivateKey jarg1_);
  public final static native void CBLSPrivateKey_GetBuf(long jarg1, CBLSPrivateKey jarg1_, long jarg2, long jarg3);
  public final static native long CBLSPrivateKey_GetHash(long jarg1, CBLSPrivateKey jarg1_);
  public final static native void CBLSPrivateKey_UpdateHash(long jarg1, CBLSPrivateKey jarg1_);
  public final static native boolean CBLSPrivateKey_SetHexStr(long jarg1, CBLSPrivateKey jarg1_, long jarg2);
  public final static native void CBLSPrivateKey_CheckMalleable(long jarg1, CBLSPrivateKey jarg1_, long jarg2, long jarg3);
  public final static native long CBLSPrivateKey_ToString(long jarg1, CBLSPrivateKey jarg1_);
  public final static native void delete_CBLSPrivateKey(long jarg1);
}
