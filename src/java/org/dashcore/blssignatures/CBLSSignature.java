/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.dashcore.blssignatures;

public class CBLSSignature {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected CBLSSignature(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CBLSSignature obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        blssignaturesJNI.delete_CBLSSignature(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CBLSSignature() {
    this(blssignaturesJNI.new_CBLSSignature__SWIG_0(), true);
  }

  public CBLSSignature(CBLSSignature arg0) {
    this(blssignaturesJNI.new_CBLSSignature__SWIG_1(CBLSSignature.getCPtr(arg0), arg0), true);
  }

  public void AggregateInsecure(CBLSSignature o) {
    blssignaturesJNI.CBLSSignature_AggregateInsecure__SWIG_0(swigCPtr, this, CBLSSignature.getCPtr(o), o);
  }

  public static CBLSSignature AggregateInsecure(SWIGTYPE_p_std__vectorT_CBLSSignature_t sigs) {
    return new CBLSSignature(blssignaturesJNI.CBLSSignature_AggregateInsecure__SWIG_1(SWIGTYPE_p_std__vectorT_CBLSSignature_t.getCPtr(sigs)), true);
  }

  public static CBLSSignature AggregateSecure(SWIGTYPE_p_std__vectorT_CBLSSignature_t sigs, SWIGTYPE_p_std__vectorT_CBLSPublicKey_t pks, SWIGTYPE_p_uint256 hash) {
    return new CBLSSignature(blssignaturesJNI.CBLSSignature_AggregateSecure(SWIGTYPE_p_std__vectorT_CBLSSignature_t.getCPtr(sigs), SWIGTYPE_p_std__vectorT_CBLSPublicKey_t.getCPtr(pks), SWIGTYPE_p_uint256.getCPtr(hash)), true);
  }

  public void SubInsecure(CBLSSignature o) {
    blssignaturesJNI.CBLSSignature_SubInsecure(swigCPtr, this, CBLSSignature.getCPtr(o), o);
  }

  public boolean VerifyInsecure(CBLSPublicKey pubKey, SWIGTYPE_p_uint256 hash) {
    return blssignaturesJNI.CBLSSignature_VerifyInsecure(swigCPtr, this, CBLSPublicKey.getCPtr(pubKey), pubKey, SWIGTYPE_p_uint256.getCPtr(hash));
  }

  public boolean VerifyInsecureAggregated(SWIGTYPE_p_std__vectorT_CBLSPublicKey_t pubKeys, SWIGTYPE_p_std__vectorT_uint256_t hashes) {
    return blssignaturesJNI.CBLSSignature_VerifyInsecureAggregated(swigCPtr, this, SWIGTYPE_p_std__vectorT_CBLSPublicKey_t.getCPtr(pubKeys), SWIGTYPE_p_std__vectorT_uint256_t.getCPtr(hashes));
  }

  public boolean VerifySecureAggregated(SWIGTYPE_p_std__vectorT_CBLSPublicKey_t pks, SWIGTYPE_p_uint256 hash) {
    return blssignaturesJNI.CBLSSignature_VerifySecureAggregated(swigCPtr, this, SWIGTYPE_p_std__vectorT_CBLSPublicKey_t.getCPtr(pks), SWIGTYPE_p_uint256.getCPtr(hash));
  }

  public boolean Recover(SWIGTYPE_p_std__vectorT_CBLSSignature_t sigs, SWIGTYPE_p_std__vectorT_CBLSId_t ids) {
    return blssignaturesJNI.CBLSSignature_Recover(swigCPtr, this, SWIGTYPE_p_std__vectorT_CBLSSignature_t.getCPtr(sigs), SWIGTYPE_p_std__vectorT_CBLSId_t.getCPtr(ids));
  }

}
