/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.dash.blssignatures;

public class PrivateKey {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected PrivateKey(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PrivateKey obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        blssignaturesJNI.delete_PrivateKey(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static PrivateKey FromSeed(byte[] seed, long seedLen) {
    return new PrivateKey(blssignaturesJNI.PrivateKey_FromSeed(seed, seedLen), true);
  }

  public static PrivateKey FromBytes(byte[] bytes, boolean modOrder) {
    return new PrivateKey(blssignaturesJNI.PrivateKey_FromBytes__SWIG_0(bytes, modOrder), true);
  }

  public static PrivateKey FromBytes(byte[] bytes) {
    return new PrivateKey(blssignaturesJNI.PrivateKey_FromBytes__SWIG_1(bytes), true);
  }

  public PrivateKey(PrivateKey k) {
    this(blssignaturesJNI.new_PrivateKey__SWIG_0(PrivateKey.getCPtr(k), k), true);
  }

  public SWIGTYPE_p_PublicKey GetPublicKey() {
    return new SWIGTYPE_p_PublicKey(blssignaturesJNI.PrivateKey_GetPublicKey(swigCPtr, this), true);
  }

  public static PrivateKey AggregateInsecure(PrivateKeyVec privateKeys) {
    return new PrivateKey(blssignaturesJNI.PrivateKey_AggregateInsecure(PrivateKeyVec.getCPtr(privateKeys), privateKeys), true);
  }

  public static PrivateKey Aggregate(PrivateKeyVec privateKeys, SWIGTYPE_p_std__vectorT_PublicKey_t pubKeys) {
    return new PrivateKey(blssignaturesJNI.PrivateKey_Aggregate(PrivateKeyVec.getCPtr(privateKeys), privateKeys, SWIGTYPE_p_std__vectorT_PublicKey_t.getCPtr(pubKeys)), true);
  }

  public void Serialize(byte[] buffer) {
    blssignaturesJNI.PrivateKey_Serialize__SWIG_0(swigCPtr, this, buffer);
  }

  public SWIGTYPE_p_std__vectorT_unsigned_char_t Serialize() {
    return new SWIGTYPE_p_std__vectorT_unsigned_char_t(blssignaturesJNI.PrivateKey_Serialize__SWIG_1(swigCPtr, this), true);
  }

  public SWIGTYPE_p_InsecureSignature SignInsecure(byte[] msg, long len) {
    return new SWIGTYPE_p_InsecureSignature(blssignaturesJNI.PrivateKey_SignInsecure(swigCPtr, this, msg, len), true);
  }

  public SWIGTYPE_p_InsecureSignature SignInsecurePrehashed(byte[] hash) {
    return new SWIGTYPE_p_InsecureSignature(blssignaturesJNI.PrivateKey_SignInsecurePrehashed(swigCPtr, this, hash), true);
  }

  public SWIGTYPE_p_Signature Sign(byte[] msg, long len) {
    return new SWIGTYPE_p_Signature(blssignaturesJNI.PrivateKey_Sign(swigCPtr, this, msg, len), true);
  }

  public SWIGTYPE_p_Signature SignPrehashed(byte[] hash) {
    return new SWIGTYPE_p_Signature(blssignaturesJNI.PrivateKey_SignPrehashed(swigCPtr, this, hash), true);
  }

  public final static long PRIVATE_KEY_SIZE = blssignaturesJNI.PrivateKey_PRIVATE_KEY_SIZE_get();
}
