/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.dash.blssignatures;

public class blssignaturesJNI {
  public final static native String BLS_GROUP_ORDER_get();
  public final static native long BLS_MESSAGE_HASH_LEN_get();
  public final static native boolean BLS_Init();
  public final static native void BLS_AssertInitialized();
  public final static native void BLS_Clean();
  public final static native void BLS_HashPubKeys(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void BLS_CheckRelicErrors();
  public final static native long new_BLS();
  public final static native void delete_BLS(long jarg1);
  public final static native long ChainCode_CHAIN_CODE_SIZE_get();
  public final static native long ChainCode_FromBytes(long jarg1);
  public final static native long new_ChainCode(long jarg1, ChainCode jarg1_);
  public final static native void ChainCode_Serialize__SWIG_0(long jarg1, ChainCode jarg1_, long jarg2);
  public final static native long ChainCode_Serialize__SWIG_1(long jarg1, ChainCode jarg1_);
  public final static native void delete_ChainCode(long jarg1);
  public final static native long ExtendedPrivateKey_EXTENDED_PRIVATE_KEY_SIZE_get();
  public final static native long ExtendedPrivateKey_FromSeed(long jarg1, long jarg2);
  public final static native long ExtendedPrivateKey_FromBytes(long jarg1);
  public final static native long ExtendedPrivateKey_PrivateChild(long jarg1, ExtendedPrivateKey jarg1_, long jarg2);
  public final static native long ExtendedPrivateKey_PublicChild(long jarg1, ExtendedPrivateKey jarg1_, long jarg2);
  public final static native long ExtendedPrivateKey_GetVersion(long jarg1, ExtendedPrivateKey jarg1_);
  public final static native long ExtendedPrivateKey_GetDepth(long jarg1, ExtendedPrivateKey jarg1_);
  public final static native long ExtendedPrivateKey_GetParentFingerprint(long jarg1, ExtendedPrivateKey jarg1_);
  public final static native long ExtendedPrivateKey_GetChildNumber(long jarg1, ExtendedPrivateKey jarg1_);
  public final static native long ExtendedPrivateKey_GetChainCode(long jarg1, ExtendedPrivateKey jarg1_);
  public final static native long ExtendedPrivateKey_GetPrivateKey(long jarg1, ExtendedPrivateKey jarg1_);
  public final static native long ExtendedPrivateKey_GetPublicKey(long jarg1, ExtendedPrivateKey jarg1_);
  public final static native long ExtendedPrivateKey_GetExtendedPublicKey(long jarg1, ExtendedPrivateKey jarg1_);
  public final static native void ExtendedPrivateKey_Serialize__SWIG_0(long jarg1, ExtendedPrivateKey jarg1_, long jarg2);
  public final static native long ExtendedPrivateKey_Serialize__SWIG_1(long jarg1, ExtendedPrivateKey jarg1_);
  public final static native void delete_ExtendedPrivateKey(long jarg1);
  public final static native long ExtendedPublicKey_VERSION_get();
  public final static native long ExtendedPublicKey_EXTENDED_PUBLIC_KEY_SIZE_get();
  public final static native long ExtendedPublicKey_FromBytes(long jarg1);
  public final static native long ExtendedPublicKey_PublicChild(long jarg1, ExtendedPublicKey jarg1_, long jarg2);
  public final static native long ExtendedPublicKey_GetVersion(long jarg1, ExtendedPublicKey jarg1_);
  public final static native long ExtendedPublicKey_GetDepth(long jarg1, ExtendedPublicKey jarg1_);
  public final static native long ExtendedPublicKey_GetParentFingerprint(long jarg1, ExtendedPublicKey jarg1_);
  public final static native long ExtendedPublicKey_GetChildNumber(long jarg1, ExtendedPublicKey jarg1_);
  public final static native long ExtendedPublicKey_GetChainCode(long jarg1, ExtendedPublicKey jarg1_);
  public final static native long ExtendedPublicKey_GetPublicKey(long jarg1, ExtendedPublicKey jarg1_);
  public final static native void ExtendedPublicKey_Serialize__SWIG_0(long jarg1, ExtendedPublicKey jarg1_, long jarg2);
  public final static native long ExtendedPublicKey_Serialize__SWIG_1(long jarg1, ExtendedPublicKey jarg1_);
  public final static native void delete_ExtendedPublicKey(long jarg1);
  public final static native long PrivateKey_PRIVATE_KEY_SIZE_get();
  public final static native long PrivateKey_FromSeed(long jarg1, long jarg2);
  public final static native long PrivateKey_FromBytes__SWIG_0(long jarg1, boolean jarg2);
  public final static native long PrivateKey_FromBytes__SWIG_1(long jarg1);
  public final static native long new_PrivateKey__SWIG_0(long jarg1, PrivateKey jarg1_);
  public final static native void delete_PrivateKey(long jarg1);
  public final static native long PrivateKey_GetPublicKey(long jarg1, PrivateKey jarg1_);
  public final static native long PrivateKey_AggregateInsecure(long jarg1);
  public final static native long PrivateKey_Aggregate(long jarg1, long jarg2);
  public final static native void PrivateKey_Serialize__SWIG_0(long jarg1, PrivateKey jarg1_, long jarg2);
  public final static native long PrivateKey_Serialize__SWIG_1(long jarg1, PrivateKey jarg1_);
  public final static native long PrivateKey_SignInsecure(long jarg1, PrivateKey jarg1_, long jarg2, long jarg3);
  public final static native long PrivateKey_SignInsecurePrehashed(long jarg1, PrivateKey jarg1_, long jarg2);
  public final static native long PrivateKey_Sign(long jarg1, PrivateKey jarg1_, long jarg2, long jarg3);
  public final static native long PrivateKey_SignPrehashed(long jarg1, PrivateKey jarg1_, long jarg2);
  public final static native long PublicKey_PUBLIC_KEY_SIZE_get();
  public final static native long PublicKey_FromBytes(long jarg1);
  public final static native long PublicKey_FromG1(long jarg1);
  public final static native long new_PublicKey(long jarg1, PublicKey jarg1_);
  public final static native long PublicKey_AggregateInsecure(long jarg1);
  public final static native long PublicKey_Aggregate(long jarg1);
  public final static native void PublicKey_Serialize__SWIG_0(long jarg1, PublicKey jarg1_, long jarg2);
  public final static native long PublicKey_Serialize__SWIG_1(long jarg1, PublicKey jarg1_);
  public final static native long PublicKey_GetFingerprint(long jarg1, PublicKey jarg1_);
  public final static native void delete_PublicKey(long jarg1);
  public final static native long InsecureSignature_SIGNATURE_SIZE_get();
  public final static native long InsecureSignature_FromBytes(long jarg1);
  public final static native long InsecureSignature_FromG2(long jarg1);
  public final static native long new_InsecureSignature(long jarg1, InsecureSignature jarg1_);
  public final static native boolean InsecureSignature_Verify(long jarg1, InsecureSignature jarg1_, long jarg2, long jarg3);
  public final static native long InsecureSignature_Aggregate(long jarg1);
  public final static native long InsecureSignature_DivideBy(long jarg1, InsecureSignature jarg1_, long jarg2);
  public final static native void InsecureSignature_Serialize__SWIG_0(long jarg1, InsecureSignature jarg1_, long jarg2);
  public final static native long InsecureSignature_Serialize__SWIG_1(long jarg1, InsecureSignature jarg1_);
  public final static native void delete_InsecureSignature(long jarg1);
  public final static native long Signature_SIGNATURE_SIZE_get();
  public final static native long Signature_FromBytes__SWIG_0(long jarg1);
  public final static native long Signature_FromBytes__SWIG_1(long jarg1, long jarg2);
  public final static native long Signature_FromG2__SWIG_0(long jarg1);
  public final static native long Signature_FromG2__SWIG_1(long jarg1, long jarg2);
  public final static native long Signature_FromInsecureSig__SWIG_0(long jarg1, InsecureSignature jarg1_);
  public final static native long Signature_FromInsecureSig__SWIG_1(long jarg1, InsecureSignature jarg1_, long jarg2);
  public final static native long new_Signature(long jarg1, Signature jarg1_);
  public final static native boolean Signature_Verify(long jarg1, Signature jarg1_);
  public final static native long Signature_AggregateSigs(long jarg1);
  public final static native long Signature_DivideBy(long jarg1, Signature jarg1_, long jarg2);
  public final static native long Signature_GetAggregationInfo(long jarg1, Signature jarg1_);
  public final static native void Signature_SetAggregationInfo(long jarg1, Signature jarg1_, long jarg2);
  public final static native void Signature_Serialize__SWIG_0(long jarg1, Signature jarg1_, long jarg2);
  public final static native long Signature_Serialize__SWIG_1(long jarg1, Signature jarg1_);
  public final static native void delete_Signature(long jarg1);
}
